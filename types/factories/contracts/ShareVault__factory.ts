/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ShareVault,
  ShareVaultInterface,
} from "../../contracts/ShareVault";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DecryptAlreadyInProgress",
    type: "error",
  },
  {
    inputs: [],
    name: "DecryptionCacheExpired",
    type: "error",
  },
  {
    inputs: [],
    name: "DecryptionProcessing",
    type: "error",
  },
  {
    inputs: [],
    name: "HandlesAlreadySavedForRequestID",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientUnlockedBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidKMSSignatures",
    type: "error",
  },
  {
    inputs: [],
    name: "MustDecryptFirst",
    type: "error",
  },
  {
    inputs: [],
    name: "NoHandleFoundForRequestID",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyCampaignContract",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
    ],
    name: "AvailableBalanceDecrypted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestID",
        type: "uint256",
      },
    ],
    name: "DecryptionFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint16",
        name: "campaignId",
        type: "uint16",
      },
    ],
    name: "FundsLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint16",
        name: "campaignId",
        type: "uint16",
      },
    ],
    name: "FundsTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint16",
        name: "campaignId",
        type: "uint16",
      },
    ],
    name: "FundsUnlocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint16",
        name: "campaignId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "LockRequestInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "WithdrawalDecryptionRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "CACHE_TIMEOUT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "cleartexts",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "decryptionProof",
        type: "bytes",
      },
    ],
    name: "callbackDecryptAvailableBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "cleartexts",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "decryptionProof",
        type: "bytes",
      },
    ],
    name: "callbackDecryptMyContribution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "cleartexts",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "decryptionProof",
        type: "bytes",
      },
    ],
    name: "callbackDecryptTotalRaised",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "campaignContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "campaignCount",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "campaigns",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "euint64",
        name: "totalRaised",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "targetAmount",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "finalized",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "cancelled",
        type: "bool",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAvailableBalance",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAvailableBalanceStatus",
    outputs: [
      {
        internalType: "enum CommonStruct.DecryptStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "uint64",
        name: "availableAmount",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "cacheExpiry",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEncryptedBalance",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "campaignId",
        type: "uint16",
      },
    ],
    name: "getLockedAmount",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalLocked",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasClaimedTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "campaignId",
        type: "uint16",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
    ],
    name: "lockFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "requestAvailableBalanceDecryption",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_campaignContract",
        type: "address",
      },
    ],
    name: "setCampaignContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "campaignOwner",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "campaignId",
        type: "uint16",
      },
    ],
    name: "transferLockedFunds",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "campaignId",
        type: "uint16",
      },
    ],
    name: "unlockFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523461016d575f6060610014610171565b828152826020820152826040820152015261002d610171565b606073687820221192c5b662b25367f70076a37bc79b6c9182815273848b0066793bcc60346da1f49049357399b8d59580602083015273a02cda4ca3a71d7c46997716f4283aa851c2881291826040820152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac938491015260018060a01b0319937f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970090858254161790557f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970190848254161790557f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970290838254161790557f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970390828254161790556102585f558060145416601455339060155416176015556040516122239081620001a58239f35b5f80fd5b60405190608082016001600160401b0381118382101761019057604052565b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610011575f80fd5b5f3560e01c80631ed3399814610184578063349fb77b1461017f57806358ae05cd1461017a578063669be2d6146101755780636b33ee09146101705780637274e30d1461016b578063750f0acc146101665780637709c16314610161578063809dab6a1461015c578063823294ba146101575780638da5cb5b1461015257806399d7cf011461014d578063a327d9b114610148578063a57f5f5814610143578063b2b867ac1461013e578063ba0ab98314610139578063c10046c314610134578063cb4869ed1461012f578063d0e30db01461012a578063da1f12ab14610125578063f3478ab914610120578063f4732da61461011b5763fbbab8c714610116575f80fd5b61155e565b611537565b611315565b6112f9565b6111eb565b6110e7565b610fe3565b610f97565b610f7b565b610f54565b610efc565b610e27565b610d29565b610ab1565b610a52565b6108ed565b610737565b610716565b6105d2565b610533565b6104df565b610472565b6103b4565b6004359061ffff8216820361019a57565b5f80fd5b6024359061ffff8216820361019a57565b6044359061ffff8216820361019a57565b634e487b7160e01b5f52604160045260245ffd5b604081019081106001600160401b038211176101ef57604052565b6101c0565b6001600160401b0381116101ef57604052565b90601f801991011681019081106001600160401b038211176101ef57604052565b90604051915f81549060018260011c93600184169182156102f7575b6020916020871084146102e357868952889560208701949081156102c2575060011461027d575b5050505061027b92500383610207565b565b61028f9194509591955f5260205f2090565b945f935b8285106102ac5750505061027b9350015f80808061026b565b8654858501529586019588955093810193610293565b935050505061027b9491925060ff19168252151560051b015f80808061026b565b634e487b7160e01b5f52602260045260245ffd5b94607f1694610244565b5f5b8381106103125750505f910152565b8181015183820152602001610303565b9060209161033b81518092818552858086019101610301565b601f01601f1916010190565b979399989461038f61010098946103816001600160401b0394999560208d61012091829160018060a01b039e8f16815201528d0190610322565b908b820360408d0152610322565b9a60608a015216608088015260a0870152151560c0860152151560e085015216910152565b3461019a57602036600319011261019a5761ffff6103d0610189565b165f52600160205260405f2060018060a01b0361044181835416926103f760018201610228565b9061040460028201610228565b946003820154916001600160401b0360048201541660066005830154920154936040519889988660101c169660ff808860081c169716958a610347565b0390f35b5f91031261019a57565b634e487b7160e01b5f52602160045260245ffd5b6003111561046d57565b61044f565b3461019a575f36600319011261019a57335f52601160205260ff60405f205416601260205260405f2060206040516104a9816101d4565b60016001600160401b03845416938483520154918291015260405191600384101561046d57606093835260208301526040820152f35b3461019a575f36600319011261019a576014546040516001600160a01b039091168152602090f35b600435906001600160a01b038216820361019a57565b602435906001600160a01b038216820361019a57565b3461019a57602036600319011261019a5761054c610507565b6015546001600160a01b039190821633036105a05760145461059e9261057c916001600160a01b031616156115c8565b60018060a01b03166bffffffffffffffffffffffff60a01b6014541617601455565b005b60405162461bcd60e51b815260206004820152600a60248201526927b7363c9037bbb732b960b11b6044820152606490fd5b3461019a575f36600319011261019a57335f9081526011602052604090206001906105ff905b5460ff1690565b61060881610463565b1461070457335f908152600e6020526040902061066b905461062b811515611602565b335f9081526010602052604090205480156106fe576106499161198f565b61065281611a41565b5061065b61163b565b9061066582611655565b52611d40565b6106aa610676610d51565b33815261068b835f52601360205260405f2090565b905181546001600160a01b0319166001600160a01b0391909116179055565b335f9081526011602052604090206106c990805460ff19166001179055565b60405190815233907fbd39a2181298499fd7cac17e7a4ca79c6a2a86be8394fcb12f279c0ab6a6a11d9080602081015b0390a2005b50610649565b604051637299cb1960e01b8152600490fd5b3461019a575f36600319011261019a57602061ffff600a5416604051908152f35b3461019a57602036600319011261019a576004356001600160401b0380821680830361019a57610768811515611676565b610774814710156116c2565b335f908152601260205260409020610790906115a1565b6115a1565b9160206107a484516001600160401b031690565b93015180156108a157421161088f575f808361082e61080588886107cf86998799849c16101561170e565b335f908152600e602052604090206107f190546107eb87611f0b565b9061198f565b335f908152600e602052604090205561176e565b335f908152601260205260409020906001600160401b03166001600160401b0319825416179055565b335af1610839611787565b501561087d576040516001600160401b03909116815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59080602081016106f9565b6040516327fcd9d160e01b8152600490fd5b60405163055a0ab760e31b8152600490fd5b335f9081526011602052604090206001906108bb906105f8565b6108c481610463565b146108db5760405163e336dced60e01b8152600490fd5b604051634c3dbb8560e11b8152600490fd5b3461019a57604036600319011261019a57610906610507565b61090e61019e565b6014546001600160a01b03919082163303610a4057610a18610a0e61ffff93851694855f52600f60205261097e6109548560405f209061ffff165f5260205260405f2090565b546109608115156117b6565b6001600160a01b0383165f9081526010602052604090205b5461198f565b6001600160a01b0382165f9081526010602052604090205561099e611eb8565b6001600160a01b0382165f908152600f602052604090206109cd9086905b9061ffff165f5260205260405f2090565b556001600160a01b0381165f9081526012602052604090206109f5905b60015f918281550155565b6001600160a01b03165f90815260116020526040902090565b805460ff19169055565b16907fc9ded3d0d6b8883d158b2912c09e57e4eeb6bd6454742de39c432f7be201f3555f80a3005b604051632b58c3e760e01b8152600490fd5b3461019a575f36600319011261019a57335f908152601260205260409020610a79906115a1565b6020610a8c82516001600160401b031690565b91015180156108a157421161088f576040516001600160401b03919091168152602090f35b3461019a57606036600319011261019a57610aca610507565b610ad261019e565b6014546001600160a01b03916044359183163303610a4057610b6782610b5861ffff94610b0f8860018060a01b03165f52600e60205260405f2090565b54610b1b8115156117f5565b610b536020610b3d61078b8c60018060a01b03165f52601260205260405f2090565b01610b4a81511515611837565b5142111561188f565b611a4b565b90610b61611eb8565b91611f5e565b6001600160a01b0385165f908152600f60205260409020610b899083906109bc565b54818115610d0357610b9a91611acf565b6001600160a01b0386165f908152600f60205260409020610bbc9084906109bc565b555b6001600160a01b0385165f908152601060205260409020548015610ce55790610be691611acf565b6001600160a01b0385165f908152601060205260409020555b610c26610c20826109bc8760018060a01b03165f52600f60205260405f2090565b54611a41565b50610c5b610c48826109bc8760018060a01b03165f52600f60205260405f2090565b546014546001600160a01b031690611c55565b6001600160a01b0384165f908152601060205260409020610c7b90610c20565b506001600160a01b0384165f908152601260205260409020610c9c906109ea565b6001600160a01b0384165f908152601160205260409020610cbc90610a0e565b1691167fcd7f44294401a9a817b59c3aac6ebf3ba2d36caabd5ef1d90338682a453f6a7b5f80a3005b506001600160a01b0385165f90815260106020526040902055610bff565b9050610d23836109bc8860018060a01b03165f52600f60205260405f2090565b55610bbe565b3461019a575f36600319011261019a576015546040516001600160a01b039091168152602090f35b60405190602082018281106001600160401b038211176101ef57604052565b6040519061027b826101d4565b6001600160401b0381116101ef57601f01601f191660200190565b81601f8201121561019a57803590610daf82610d7d565b92610dbd6040519485610207565b8284526020838301011161019a57815f926020809301838601378301015290565b606060031982011261019a57600435916001600160401b0360243581811161019a5783610e0d91600401610d98565b9260443591821161019a57610e2491600401610d98565b90565b3461019a57610e42610e3836610dde565b8183949293611b53565b815f526006602052602061ffff60405f205416910151905f54420192834211610ef757610ec4610eea9361059e956001600160401b0360405192610e85846101d4565b1682526020820152835f52600560205260405f208151815467ffffffffffffffff19166001600160401b03919091161781559060019060200151910155565b5f52600660205260405f2061ffff19815416905561ffff165f52600760205260405f2090565b805460ff19166002179055565b61175a565b3461019a57604036600319011261019a57602060ff610f48610f1c610189565b61ffff610f2761051d565b91165f526002845260405f209060018060a01b03165f5260205260405f2090565b54166040519015158152f35b3461019a575f36600319011261019a57335f52600e602052602060405f2054604051908152f35b3461019a575f36600319011261019a5760206040516102588152f35b3461019a57604036600319011261019a57602060ff610f48610fb7610189565b61ffff610fc261051d565b91165f52600d845260405f209060018060a01b03165f5260205260405f2090565b3461019a576110006020610ff636610dde565b8183959293611b53565b0151815f52601360205260405f209160405192602084018481106001600160401b038211176101ef57604052546001600160a01b0316835242610258810193908410610ef7575f6110d96109f5936110cb610eea9661059e98611073611064610d70565b6001600160401b039093168352565b602082015285516110a0906001600160a01b03166001600160a01b03165f90815260126020526040902090565b8151815467ffffffffffffffff19166001600160401b03919091161781559060019060200151910155565b5f52601360205260405f2090565b55516001600160a01b031690565b3461019a5761059e610eea6111136111a06111dd6111cb602061110936610dde565b8183989293611b53565b0151845f5260086020525f6111c260408220966111b4604051986111368a6101d4565b546001600160a01b0381168a5260a01c61ffff1660208a01908152845490959061116090426118ea565b61116b611064610d70565b60208201526110a0611194611182885161ffff1690565b61ffff165f52600460205260405f2090565b8b516001600160a01b03165b60018060a01b03165f5260205260405f2090565b5f52600860205260405f2090565b555161ffff1690565b61ffff165f52600960205260405f2090565b91516001600160a01b031690565b5f36600319011261019a576112013415156118f7565b61121f6001600160401b0361121881341115611943565b3416611f0b565b335f908152600e602052604090205480156112e4579061123e91611acf565b335f908152600e60205260409020555b335f908152600e6020526040902061126590610c20565b50335f818152600e6020526040902061128091905b54611c55565b6014546001600160a01b0316806112c6575b60405134815233907f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c49080602081016106f9565b335f908152600e602052604090206112de919061127a565b5f611292565b50335f908152600e602052604090205561124e565b3461019a575f36600319011261019a5760206040516127118152f35b3461019a57606036600319011261019a5761132e610507565b61133661051d565b9061133f6101af565b6014549091906001600160a01b039081163303610a405761ffff938261137c856109bc6104419660018060a01b03165f52600f60205260405f2090565b54926113898415156117b6565b6001600160a01b0382165f908152600e602052604090206113ab908590610978565b6001600160a01b0383165f908152600e602090815260408083209390935560109052206113d9908590610978565b6001600160a01b0383165f908152601060205260409020556001600160a01b0383165f908152600e60205260409020548481156115195761141991611acf565b6001600160a01b0384165f908152600e60205260409020555b6001600160a01b0383165f908152600e6020526040902061145290610c20565b506001600160a01b0383165f908152600e6020526040902061147590849061127a565b61147d611eb8565b6001600160a01b0383165f908152600f6020526040902061149f9088906109bc565b556001600160a01b0382165f9081526012602052604090206114c0906109ea565b6001600160a01b0382165f9081526011602052604090206114e090610a0e565b8060405197889716931691167f48863b9440e731ce47d2d0cb2155a76a0f38c0c896a264983b01223f99bbe09f5f80a482526020820190565b6001600160a01b0385165f908152600e602052604090205550611432565b3461019a575f36600319011261019a57335f526010602052602060405f2054604051908152f35b3461019a57602036600319011261019a57602061159861157c610189565b335f52600f835260405f209061ffff165f5260205260405f2090565b54604051908152f35b906040516115ae816101d4565b6020600182946001600160401b0381541684520154910152565b156115cf57565b60405162461bcd60e51b815260206004820152600b60248201526a105b1c9958591e481cd95d60aa1b6044820152606490fd5b1561160957565b60405162461bcd60e51b815260206004820152600a6024820152694e6f2062616c616e636560b01b6044820152606490fd5b60405190611648826101d4565b6001825260203681840137565b8051156116625760200190565b634e487b7160e01b5f52603260045260245ffd5b1561167d57565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b156116c957565b60405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e74207661756c742062616c616e63650000000000006044820152606490fd5b1561171557565b60405162461bcd60e51b815260206004820152601e60248201527f496e73756666696369656e7420617661696c61626c652062616c616e636500006044820152606490fd5b634e487b7160e01b5f52601160045260245ffd5b6001600160401b039182169082160391908211610ef757565b3d156117b1573d9061179882610d7d565b916117a66040519384610207565b82523d5f602084013e565b606090565b156117bd57565b60405162461bcd60e51b815260206004820152601060248201526f139bc81b1bd8dad95908185b5bdd5b9d60821b6044820152606490fd5b156117fc57565b60405162461bcd60e51b81526020600482015260136024820152725573657220686173206e6f2062616c616e636560681b6044820152606490fd5b1561183e57565b60405162461bcd60e51b8152602060048201526024808201527f4d757374206465637279707420617661696c61626c652062616c616e636520666044820152631a5c9cdd60e21b6064820152608490fd5b1561189657565b60405162461bcd60e51b815260206004820152602660248201527f42616c616e63652063616368652065787069726564202d20706c6561736520726044820152650cacce4cae6d60d31b6064820152608490fd5b91908201809211610ef757565b156118fe57565b60405162461bcd60e51b815260206004820152601860248201527f4d757374206465706f736974206d6f7265207468616e203000000000000000006044820152606490fd5b1561194a57565b60405162461bcd60e51b815260206004820152601b60248201527f416d6f756e7420746f6f206c6172676520666f722075696e74363400000000006044820152606490fd5b908115611a31575b8015611a1f575b602090606460018060a01b035f805160206121ce8339815191525416935f60405195869485936303056db360e31b8552600485015260248401528160448401525af1908115611a1a575f916119f1575090565b610e24915060203d602011611a13575b611a0b8183610207565b810190611c3b565b503d611a01565b611c4a565b506020611a2a611eb8565b905061199e565b9050611a3b611eb8565b90611997565b610e243082611c55565b908115611abf575b8015611aad575b602090606460018060a01b035f805160206121ce8339815191525416935f6040519586948593631391547f60e01b8552600485015260248401528160448401525af1908115611a1a575f916119f1575090565b506020611ab8611eb8565b9050611a5a565b9050611ac9611eb8565b90611a53565b908115611b43575b8015611b31575b602090606460018060a01b035f805160206121ce8339815191525416935f604051958694859363022f65e760e31b8552600485015260248401528160448401525af1908115611a1a575f916119f1575090565b506020611b3c611eb8565b9050611ade565b9050611b4d611eb8565b90611ad7565b9190825f527f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf016020908060205260405f205415611c2957845f5260205260405f206040519182602083549182815201925f5260205f20915f905b828210611c1257505050509181611bcd611bd69593611bd2950382610207565b61201d565b1590565b611c00577f1af0453083661051f6e56e5c070792320652e612154bf9af8637bb1e7655b99d5f80a2565b60405163cf6c44e960e01b8152600490fd5b835485529384019360019384019390910190611bad565b60405163d66ca67560e01b8152600490fd5b9081602091031261019a575190565b6040513d5f823e3d90fd5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700546001600160a01b0392908316803b1561019a575f92836044926040519687958694635ca4b5b160e11b865260048601521660248401525af18015611a1a57611cbc5750565b61027b906101f4565b9081518082526020808093019301915f5b828110611ce4575050505090565b835185529381019392810192600101611cd6565b906020610e24928181520190611cc5565b9291611d22918452606060208501526060840190611cc5565b91604063c10046c360e01b910152565b5f198114610ef75760010190565b7f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf0080547f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700549093929190611daa90611d9e906001600160a01b031681565b6001600160a01b031690565b803b1561019a575f6040518092637d6e912360e11b8252818381611dd18960048301611cf8565b03925af18015611a1a57611ea5575b507f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970254611e1790611d9e906001600160a01b031681565b90813b1561019a575f6040518093633263b83b60e01b8252818381611e40898c60048401611d09565b03925af18015611a1a5761027b93611e6893611e6292611e8c575b50866120f4565b54611d32565b7f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf0055565b80611e99611e9f926101f4565b80610445565b5f611e5b565b80611e99611eb2926101f4565b5f611de0565b5f805160206121ce83398151915254604051639cd07acb60e01b81525f60048201819052600560248301529091602091839160449183916001600160a01b03165af1908115611a1a575f916119f1575090565b5f805160206121ce83398151915254604051639cd07acb60e01b8152600481019290925260056024830152602090829060449082905f906001600160a01b03165af1908115611a1a575f916119f1575090565b9060646020925f60018060a01b035f805160206121ce83398151915254166040519687958694637702dcff60e01b86526004860152602485015260448401525af1908115611a1a575f916119f1575090565b6020929190611fc6849282815194859201610301565b019081520190565b9081602091031261019a5751801515810361019a5790565b9161200f90612001610e249593606086526060860190611cc5565b908482036020860152610322565b916040818403910152610322565b919080519160209383850193848611610ef757604001809411610ef7576120b8936120628694612054604051938492888401611fb0565b03601f198101835282610207565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649703545f9061209a90611d9e906001600160a01b031681565b92604051968795869485936378542ead60e01b855260048501611fe6565b03925af1918215611a1a575f926120ce57505090565b610e249250803d106120ed575b6120e58183610207565b810190611fce565b503d6120db565b805f527f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf016020918160205260405f20546121bb575f5260205260405f20908251926001600160401b0384116101ef576801000000000000000084116101ef578254848455808510612195575b5060206121729101925f5260205f2090565b905f5b848110612183575050505050565b83518382015592810192600101612175565b835f528460205f2091820191015b8181106121b05750612160565b5f81556001016121a3565b604051633f06d22b60e01b8152600490fdfe9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649701a2646970667358221220fb048ff05ecf9d94eaa40cbe8c94ff24f04c7a5aa21f81f75b2178975bd5528964736f6c63430008180033";

type ShareVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShareVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShareVault__factory extends ContractFactory {
  constructor(...args: ShareVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ShareVault & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ShareVault__factory {
    return super.connect(runner) as ShareVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShareVaultInterface {
    return new Interface(_abi) as ShareVaultInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ShareVault {
    return new Contract(address, _abi, runner) as unknown as ShareVault;
  }
}
