/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ShareVault,
  ShareVaultInterface,
} from "../../contracts/ShareVault";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CampaignContractAlreadySet",
    type: "error",
  },
  {
    inputs: [],
    name: "DecryptAlreadyInProgress",
    type: "error",
  },
  {
    inputs: [],
    name: "DecryptionCacheExpired",
    type: "error",
  },
  {
    inputs: [],
    name: "DecryptionProcessing",
    type: "error",
  },
  {
    inputs: [],
    name: "DepositAmountTooLarge",
    type: "error",
  },
  {
    inputs: [],
    name: "HandlesAlreadySavedForRequestID",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientAvailableBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientUnlockedBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientVaultBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidDepositAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidKMSSignatures",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidWithdrawalAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "MustDecryptFirst",
    type: "error",
  },
  {
    inputs: [],
    name: "NoBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NoHandleFoundForRequestID",
    type: "error",
  },
  {
    inputs: [],
    name: "NoLockedAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyCampaignContract",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "UserHasNoBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
    ],
    name: "AvailableBalanceDecrypted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestID",
        type: "uint256",
      },
    ],
    name: "DecryptionFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint16",
        name: "campaignId",
        type: "uint16",
      },
    ],
    name: "FundsLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint16",
        name: "campaignId",
        type: "uint16",
      },
    ],
    name: "FundsTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint16",
        name: "campaignId",
        type: "uint16",
      },
    ],
    name: "FundsUnlocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint16",
        name: "campaignId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "LockRequestInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "WithdrawalDecryptionRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "CACHE_TIMEOUT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "cleartexts",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "decryptionProof",
        type: "bytes",
      },
    ],
    name: "callbackDecryptAvailableBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "cleartexts",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "decryptionProof",
        type: "bytes",
      },
    ],
    name: "callbackDecryptMyContribution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "cleartexts",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "decryptionProof",
        type: "bytes",
      },
    ],
    name: "callbackDecryptTotalRaised",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "campaignContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "campaignCount",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "campaigns",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "euint64",
        name: "totalRaised",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "targetAmount",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "finalized",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "cancelled",
        type: "bool",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAvailableBalance",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAvailableBalanceStatus",
    outputs: [
      {
        internalType: "enum CommonStruct.DecryptStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "uint64",
        name: "availableAmount",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "cacheExpiry",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEncryptedBalance",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "campaignId",
        type: "uint16",
      },
    ],
    name: "getLockedAmount",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalLocked",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasClaimedTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "campaignId",
        type: "uint16",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
    ],
    name: "lockFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "requestAvailableBalanceDecryption",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_campaignContract",
        type: "address",
      },
    ],
    name: "setCampaignContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "campaignOwner",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "campaignId",
        type: "uint16",
      },
    ],
    name: "transferLockedFunds",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "campaignId",
        type: "uint16",
      },
    ],
    name: "unlockFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523461016c575f6060610014610170565b828152826020820152826040820152015261002d610170565b606073687820221192c5b662b25367f70076a37bc79b6c9182815273848b0066793bcc60346da1f49049357399b8d59580602083015273a02cda4ca3a71d7c46997716f4283aa851c2881291826040820152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac938491015260018060a01b0319937f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970090858254161790557f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970190848254161790557f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970290838254161790557f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970390828254161790556102585f5580601454166014553390601554161760155560405161202390816101a48239f35b5f80fd5b60405190608082016001600160401b0381118382101761018f57604052565b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610011575f80fd5b5f3560e01c80631ed3399814610184578063349fb77b1461017f57806358ae05cd1461017a578063669be2d6146101755780636b33ee09146101705780637274e30d1461016b578063750f0acc146101665780637709c16314610161578063809dab6a1461015c578063823294ba146101575780638da5cb5b1461015257806399d7cf011461014d578063a327d9b114610148578063a57f5f5814610143578063b2b867ac1461013e578063ba0ab98314610139578063c10046c314610134578063cb4869ed1461012f578063d0e30db01461012a578063da1f12ab14610125578063f3478ab914610120578063f4732da61461011b5763fbbab8c714610116575f80fd5b61169a565b611673565b611458565b61143c565b6112d5565b6111d1565b6110b8565b61106c565b611050565b611029565b610fd1565b610efe565b610e00565b610b80565b610ac3565b610959565b610716565b6106f5565b6105a3565b610533565b6104df565b610472565b6103b4565b6004359061ffff8216820361019a57565b5f80fd5b6024359061ffff8216820361019a57565b6044359061ffff8216820361019a57565b634e487b7160e01b5f52604160045260245ffd5b604081019081106001600160401b038211176101ef57604052565b6101c0565b6001600160401b0381116101ef57604052565b90601f801991011681019081106001600160401b038211176101ef57604052565b90604051915f81549060018260011c93600184169182156102f7575b6020916020871084146102e357868952889560208701949081156102c2575060011461027d575b5050505061027b92500383610207565b565b61028f9194509591955f5260205f2090565b945f935b8285106102ac5750505061027b9350015f80808061026b565b8654858501529586019588955093810193610293565b935050505061027b9491925060ff19168252151560051b015f80808061026b565b634e487b7160e01b5f52602260045260245ffd5b94607f1694610244565b5f5b8381106103125750505f910152565b8181015183820152602001610303565b9060209161033b81518092818552858086019101610301565b601f01601f1916010190565b979399989461038f61010098946103816001600160401b0394999560208d61012091829160018060a01b039e8f16815201528d0190610322565b908b820360408d0152610322565b9a60608a015216608088015260a0870152151560c0860152151560e085015216910152565b3461019a57602036600319011261019a5761ffff6103d0610189565b165f52600160205260405f2060018060a01b0361044181835416926103f760018201610228565b9061040460028201610228565b946003820154916001600160401b0360048201541660066005830154920154936040519889988660101c169660ff808860081c169716958a610347565b0390f35b5f91031261019a57565b634e487b7160e01b5f52602160045260245ffd5b6003111561046d57565b61044f565b3461019a575f36600319011261019a57335f52601160205260ff60405f205416601260205260405f2060206040516104a9816101d4565b60016001600160401b03845416938483520154918291015260405191600384101561046d57606093835260208301526040820152f35b3461019a575f36600319011261019a576014546040516001600160a01b039091168152602090f35b600435906001600160a01b038216820361019a57565b602435906001600160a01b038216820361019a57565b3461019a57602036600319011261019a5761054c610507565b6015546001600160a01b039081163303610591576014549181831661057f576001600160a01b0319909216911617601455005b6040516311dac86360e11b8152600490fd5b604051635fc483c560e01b8152600490fd5b3461019a575f36600319011261019a57335f9081526011602052604090206001906105d0905b5460ff1690565b6105d981610463565b146106e357335f908152600e602052604090205480156106d157335f90815260106020526040902061063891905480156106cb576106169161178f565b61061f81611841565b50610628611704565b906106328261171e565b52611b40565b610677610643610e28565b338152610658835f52601360205260405f2090565b905181546001600160a01b0319166001600160a01b0391909116179055565b335f90815260116020526040902061069690805460ff19166001179055565b60405190815233907fbd39a2181298499fd7cac17e7a4ca79c6a2a86be8394fcb12f279c0ab6a6a11d9080602081015b0390a2005b50610616565b604051636165515360e11b8152600490fd5b604051637299cb1960e01b8152600490fd5b3461019a575f36600319011261019a57602061ffff600a5416604051908152f35b3461019a57602036600319011261019a5760048035906001600160401b038083169081840361019a5781156109485781471061093757335f908152601260205260409020610763906116dd565b602061077682516001600160401b031690565b91015180156108ef5742116108de571681116108ce57335f908152600e6020526040812090918291829182916107b690546107b083611d0b565b9061178f565b335f908152600e602052604090209081556107d2905b54611841565b50335f818152600e602052604090206107ed91905b54611a55565b6014546001600160a01b0316806108b0575b50335f908152601260205260409020610824905b805467ffffffffffffffff19169055565b335f90815260126020908152604080832060010185905560119091529020610851905b805460ff19169055565b335af161085c61173f565b50156108a157506040516001600160401b03909116815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59080602081016106c6565b6040516327fcd9d160e01b8152fd5b335f908152600e602052604090206108c891906107e7565b5f6107ff565b5060405163528ef59f60e11b8152fd5b60405163055a0ab760e31b81528490fd5b335f908152601160205260409020859060019061090b906105c9565b61091481610463565b146109285760405163e336dced60e01b8152fd5b604051634c3dbb8560e11b8152fd5b6040516314ecd6c760e01b81528390fd5b604051639abc749160e01b81528390fd5b3461019a57604036600319011261019a57610972610507565b61097a61019e565b6014546001600160a01b03919082163303610ab1576001600160a01b0383165f908152600f602052604090206109be9082905b9061ffff165f5260205260405f2090565b54908115610a9f576001600160a01b0384165f90815260106020526040902061ffff926109ec915b5461178f565b6001600160a01b0385165f90815260106020526040902055610a0c611cb8565b6001600160a01b0385165f908152600f60205260409020610a2e9083906109ad565b556001600160a01b0384165f908152601260205260409020610a56905b60015f918281550155565b6001600160a01b0384165f908152601160205260409020610a7690610847565b1691167fc9ded3d0d6b8883d158b2912c09e57e4eeb6bd6454742de39c432f7be201f3555f80a3005b604051631882a70d60e21b8152600490fd5b604051632b58c3e760e01b8152600490fd5b3461019a575f36600319011261019a57335f908152601260205260409020610aea906116dd565b6020610afd82516001600160401b031690565b9101518015610b34574211610b22576040516001600160401b03919091168152602090f35b60405163055a0ab760e31b8152600490fd5b335f908152601160205260409020600190610b4e906105c9565b610b5781610463565b14610b6e5760405163e336dced60e01b8152600490fd5b604051634c3dbb8560e11b8152600490fd5b3461019a57606036600319011261019a57610b99610507565b610ba161019e565b6014546001600160a01b03916044359183163303610ab1576001600160a01b0384165f908152600e60205260409020548015610dee576001600160a01b0385165f90815260106020526040902061ffff9390610c3a905491610c21818415159585875f14610de857610c129161178f565b610c1b81611841565b5061184b565b90610c2b82611841565b50610c34611cb8565b91611d5e565b91610c4483611841565b506001600160a01b0387165f908152600f60205260409020610c679085906109ad565b54838115610dc257610c78916118cf565b6001600160a01b0388165f908152600f60205260409020610c9a9086906109ad565b555b15610da45790610cab916118cf565b6001600160a01b0385165f908152601060205260409020555b610ce56107cc826109ad8760018060a01b03165f52600f60205260405f2090565b50610d1a610d07826109ad8760018060a01b03165f52600f60205260405f2090565b546014546001600160a01b031690611a55565b6001600160a01b0384165f908152601060205260409020610d3a906107cc565b506001600160a01b0384165f908152601260205260409020610d5b90610a4b565b6001600160a01b0384165f908152601160205260409020610d7b90610847565b1691167fcd7f44294401a9a817b59c3aac6ebf3ba2d36caabd5ef1d90338682a453f6a7b5f80a3005b506001600160a01b0385165f90815260106020526040902055610cc4565b9050610de2856109ad8a60018060a01b03165f52600f60205260405f2090565b55610c9c565b50610c12565b60405163c015977760e01b8152600490fd5b3461019a575f36600319011261019a576015546040516001600160a01b039091168152602090f35b60405190602082018281106001600160401b038211176101ef57604052565b6040519061027b826101d4565b6001600160401b0381116101ef57601f01601f191660200190565b81601f8201121561019a57803590610e8682610e54565b92610e946040519485610207565b8284526020838301011161019a57815f926020809301838601378301015290565b606060031982011261019a57600435916001600160401b0360243581811161019a5783610ee491600401610e6f565b9260443591821161019a57610efb91600401610e6f565b90565b3461019a57610f19610f0f36610eb5565b8183949293611953565b815f526006602052602061ffff60405f205416910151905f54420192834211610fcc57610f97610fbd93610fca956001600160401b0360405192610f5c846101d4565b1682526020820152835f52600560205260405f209060206001916001600160401b038151166001600160401b03198554161784550151910155565b5f52600660205260405f2061ffff19815416905561ffff165f52600760205260405f2090565b805460ff19166002179055565b005b61176e565b3461019a57604036600319011261019a57602060ff61101d610ff1610189565b61ffff610ffc61051d565b91165f526002845260405f209060018060a01b03165f5260205260405f2090565b54166040519015158152f35b3461019a575f36600319011261019a57335f52600e602052602060405f2054604051908152f35b3461019a575f36600319011261019a5760206040516102588152f35b3461019a57604036600319011261019a57602060ff61101d61108c610189565b61ffff61109761051d565b91165f52600d845260405f209060018060a01b03165f5260205260405f2090565b3461019a576110d560206110cb36610eb5565b8183959293611953565b0151815f52601360205260405f209160405192602084018481106001600160401b038211176101ef57604052546001600160a01b0316835242610258810193908410610fcc575f6111aa6111b89361119c610fbd96610fca98611148611139610e47565b6001600160401b039093168352565b60208201528551611175906001600160a01b03166001600160a01b03165f90815260126020526040902090565b9060206001916001600160401b038151166001600160401b03198554161784550151910155565b5f52601360205260405f2090565b55516001600160a01b031690565b6001600160a01b03165f90815260116020526040902090565b3461019a57610fca610fbd6111fd61128a6112c76112b560206111f336610eb5565b8183989293611953565b0151845f5260086020525f6112ac604082209661129e604051986112208a6101d4565b546001600160a01b0381168a5260a01c61ffff1660208a01908152845490959061124a9042611782565b611255611139610e47565b602082015261117561127e61126c885161ffff1690565b61ffff165f52600460205260405f2090565b8b516001600160a01b03165b60018060a01b03165f5260205260405f2090565b5f52600860205260405f2090565b555161ffff1690565b61ffff165f52600960205260405f2090565b91516001600160a01b031690565b5f36600319011261019a57341561142a576001600160401b0380341161141857611300903416611d0b565b335f908152600e60205260409020548015611403579061131f916118cf565b335f908152600e60205260409020555b335f908152600e60205260409020611346906107cc565b50335f818152600e6020526040902061135f91906107e7565b6014546001600160a01b0316806113e5575b335f90815260126020526040902061138890610813565b335f90815260126020526040812060010155335f9081526011602052604090206113b190610847565b60405134815233907f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c49080602081016106c6565b335f908152600e602052604090206113fd91906107e7565b5f611371565b50335f908152600e602052604090205561132f565b6040516305b9d51760e41b8152600490fd5b60405163fe9ba5cd60e01b8152600490fd5b3461019a575f36600319011261019a5760206040516127118152f35b3461019a57606036600319011261019a57611471610507565b61147961051d565b6114816101af565b60145490916001600160a01b039182163303610ab1576001600160a01b0384165f908152600f602052604090206114b99084906109ad565b54908115610a9f5784610441936114e7846109e661ffff9960018060a01b03165f52600e60205260405f2090565b6001600160a01b0383165f908152600e602090815260408083209390935560109052206115159085906109e6565b6001600160a01b0383165f908152601060205260409020556001600160a01b0383165f908152600e602052604090205484811561165557611555916118cf565b6001600160a01b0384165f908152600e60205260409020555b6001600160a01b0383165f908152600e6020526040902061158e906107cc565b506001600160a01b0383165f908152600e602052604090206115b19084906107e7565b6115b9611cb8565b6001600160a01b0383165f908152600f602052604090206115db9088906109ad565b556001600160a01b0382165f9081526012602052604090206115fc90610a4b565b6001600160a01b0382165f90815260116020526040902061161c90610847565b8060405197889716931691167f48863b9440e731ce47d2d0cb2155a76a0f38c0c896a264983b01223f99bbe09f5f80a482526020820190565b6001600160a01b0385165f908152600e60205260409020555061156e565b3461019a575f36600319011261019a57335f526010602052602060405f2054604051908152f35b3461019a57602036600319011261019a5760206116d46116b8610189565b335f52600f835260405f209061ffff165f5260205260405f2090565b54604051908152f35b906040516116ea816101d4565b6020600182946001600160401b0381541684520154910152565b60405190611711826101d4565b6001825260203681840137565b80511561172b5760200190565b634e487b7160e01b5f52603260045260245ffd5b3d15611769573d9061175082610e54565b9161175e6040519384610207565b82523d5f602084013e565b606090565b634e487b7160e01b5f52601160045260245ffd5b91908201809211610fcc57565b908115611831575b801561181f575b602090606460018060a01b035f80516020611fce8339815191525416935f60405195869485936303056db360e31b8552600485015260248401528160448401525af190811561181a575f916117f1575090565b610efb915060203d602011611813575b61180b8183610207565b810190611a3b565b503d611801565b611a4a565b50602061182a611cb8565b905061179e565b905061183b611cb8565b90611797565b610efb3082611a55565b9081156118bf575b80156118ad575b602090606460018060a01b035f80516020611fce8339815191525416935f6040519586948593631391547f60e01b8552600485015260248401528160448401525af190811561181a575f916117f1575090565b5060206118b8611cb8565b905061185a565b90506118c9611cb8565b90611853565b908115611943575b8015611931575b602090606460018060a01b035f80516020611fce8339815191525416935f604051958694859363022f65e760e31b8552600485015260248401528160448401525af190811561181a575f916117f1575090565b50602061193c611cb8565b90506118de565b905061194d611cb8565b906118d7565b9190825f527f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf016020908060205260405f205415611a2957845f5260205260405f206040519182602083549182815201925f5260205f20915f905b828210611a12575050505091816119cd6119d695936119d2950382610207565b611e1d565b1590565b611a00577f1af0453083661051f6e56e5c070792320652e612154bf9af8637bb1e7655b99d5f80a2565b60405163cf6c44e960e01b8152600490fd5b8354855293840193600193840193909101906119ad565b60405163d66ca67560e01b8152600490fd5b9081602091031261019a575190565b6040513d5f823e3d90fd5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700546001600160a01b0392908316803b1561019a575f92836044926040519687958694635ca4b5b160e11b865260048601521660248401525af1801561181a57611abc5750565b61027b906101f4565b9081518082526020808093019301915f5b828110611ae4575050505090565b835185529381019392810192600101611ad6565b906020610efb928181520190611ac5565b9291611b22918452606060208501526060840190611ac5565b91604063c10046c360e01b910152565b5f198114610fcc5760010190565b7f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf0080547f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700549093929190611baa90611b9e906001600160a01b031681565b6001600160a01b031690565b803b1561019a575f6040518092637d6e912360e11b8252818381611bd18960048301611af8565b03925af1801561181a57611ca5575b507f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970254611c1790611b9e906001600160a01b031681565b90813b1561019a575f6040518093633263b83b60e01b8252818381611c40898c60048401611b09565b03925af1801561181a5761027b93611c6893611c6292611c8c575b5086611ef4565b54611b32565b7f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf0055565b80611c99611c9f926101f4565b80610445565b5f611c5b565b80611c99611cb2926101f4565b5f611be0565b5f80516020611fce83398151915254604051639cd07acb60e01b81525f60048201819052600560248301529091602091839160449183916001600160a01b03165af190811561181a575f916117f1575090565b5f80516020611fce83398151915254604051639cd07acb60e01b8152600481019290925260056024830152602090829060449082905f906001600160a01b03165af190811561181a575f916117f1575090565b9060646020925f60018060a01b035f80516020611fce83398151915254166040519687958694637702dcff60e01b86526004860152602485015260448401525af190811561181a575f916117f1575090565b6020929190611dc6849282815194859201610301565b019081520190565b9081602091031261019a5751801515810361019a5790565b91611e0f90611e01610efb9593606086526060860190611ac5565b908482036020860152610322565b916040818403910152610322565b919080519160209383850193848611610fcc57604001809411610fcc57611eb893611e628694611e54604051938492888401611db0565b03601f198101835282610207565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649703545f90611e9a90611b9e906001600160a01b031681565b92604051968795869485936378542ead60e01b855260048501611de6565b03925af191821561181a575f92611ece57505090565b610efb9250803d10611eed575b611ee58183610207565b810190611dce565b503d611edb565b805f527f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf016020918160205260405f2054611fbb575f5260205260405f20908251926001600160401b0384116101ef576801000000000000000084116101ef578254848455808510611f95575b506020611f729101925f5260205f2090565b905f5b848110611f83575050505050565b83518382015592810192600101611f75565b835f528460205f2091820191015b818110611fb05750611f60565b5f8155600101611fa3565b604051633f06d22b60e01b8152600490fdfe9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649701a2646970667358221220d7619bc9829fd95bb727c379d1842ee629fc1fd522002c4972f4906806c189a564736f6c63430008180033";

type ShareVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShareVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShareVault__factory extends ContractFactory {
  constructor(...args: ShareVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ShareVault & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ShareVault__factory {
    return super.connect(runner) as ShareVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShareVaultInterface {
    return new Interface(_abi) as ShareVaultInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ShareVault {
    return new Contract(address, _abi, runner) as unknown as ShareVault;
  }
}
