/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ShareVault,
  ShareVaultInterface,
} from "../../contracts/ShareVault";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CampaignContractAlreadySet",
    type: "error",
  },
  {
    inputs: [],
    name: "DecryptAlreadyInProgress",
    type: "error",
  },
  {
    inputs: [],
    name: "DecryptionCacheExpired",
    type: "error",
  },
  {
    inputs: [],
    name: "DecryptionProcessing",
    type: "error",
  },
  {
    inputs: [],
    name: "DepositAmountTooLarge",
    type: "error",
  },
  {
    inputs: [],
    name: "HandlesAlreadySavedForRequestID",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientAvailableBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientUnlockedBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientVaultBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidDepositAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidKMSSignatures",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidWithdrawalAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "MustDecryptFirst",
    type: "error",
  },
  {
    inputs: [],
    name: "NoBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NoHandleFoundForRequestID",
    type: "error",
  },
  {
    inputs: [],
    name: "NoLockedAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyCampaignContract",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "UserHasNoBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
    ],
    name: "AvailableBalanceDecrypted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestID",
        type: "uint256",
      },
    ],
    name: "DecryptionFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint16",
        name: "campaignId",
        type: "uint16",
      },
    ],
    name: "FundsLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint16",
        name: "campaignId",
        type: "uint16",
      },
    ],
    name: "FundsTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint16",
        name: "campaignId",
        type: "uint16",
      },
    ],
    name: "FundsUnlocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint16",
        name: "campaignId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "LockRequestInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "WithdrawalDecryptionRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "CACHE_TIMEOUT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "cleartexts",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "decryptionProof",
        type: "bytes",
      },
    ],
    name: "callbackDecryptAvailableBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "cleartexts",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "decryptionProof",
        type: "bytes",
      },
    ],
    name: "callbackDecryptMyContribution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "cleartexts",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "decryptionProof",
        type: "bytes",
      },
    ],
    name: "callbackDecryptTotalRaised",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "campaignContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "campaignCount",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "campaigns",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "euint64",
        name: "totalRaised",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "targetAmount",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "finalized",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "cancelled",
        type: "bool",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAvailableBalance",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAvailableBalanceStatus",
    outputs: [
      {
        internalType: "enum CommonStruct.DecryptStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "uint64",
        name: "availableAmount",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "cacheExpiry",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEncryptedBalance",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEncryptedBalanceAndLocked",
    outputs: [
      {
        internalType: "euint64",
        name: "balance",
        type: "bytes32",
      },
      {
        internalType: "euint64",
        name: "locked",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEncryptedTotalLocked",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasClaimedTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "campaignId",
        type: "uint16",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
    ],
    name: "lockFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "requestAvailableBalanceDecryption",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_campaignContract",
        type: "address",
      },
    ],
    name: "setCampaignContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "campaignOwner",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "campaignId",
        type: "uint16",
      },
    ],
    name: "transferLockedFunds",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "campaignId",
        type: "uint16",
      },
    ],
    name: "unlockFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523461016d575f6060610014610171565b828152826020820152826040820152015261002d610171565b606073687820221192c5b662b25367f70076a37bc79b6c9182815273848b0066793bcc60346da1f49049357399b8d59580602083015273a02cda4ca3a71d7c46997716f4283aa851c2881291826040820152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac938491015260018060a01b0319937f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970090858254161790557f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970190848254161790557f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970290838254161790557f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970390828254161790556102585f558060145416601455339060155416176015556040516121ef9081620001a58239f35b5f80fd5b60405190608082016001600160401b0381118382101761019057604052565b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610011575f80fd5b5f3560e01c80631ed3399814610184578063349fb77b1461017f578063459a50831461017a57806358ae05cd14610175578063669be2d6146101705780636b33ee091461016b5780637274e30d14610166578063750f0acc146101615780637709c1631461015c578063809dab6a14610157578063823294ba146101525780638da5cb5b1461014d57806399d7cf0114610148578063a327d9b114610143578063a57f5f581461013e578063a9b8a9ce14610139578063b2b867ac14610134578063ba0ab9831461012f578063c10046c31461012a578063cb4869ed14610125578063d0e30db014610120578063da1f12ab1461011b5763f3478ab914610116575f80fd5b611561565b611545565b6113de565b6112da565b6111c1565b611175565b611159565b611132565b61110b565b6110b3565b610fe0565b610ee2565b610c75565b610bb8565b61098c565b610749565b610728565b6105d6565b610566565b610512565b6104df565b610472565b6103b4565b6004359061ffff8216820361019a57565b5f80fd5b6024359061ffff8216820361019a57565b6044359061ffff8216820361019a57565b634e487b7160e01b5f52604160045260245ffd5b604081019081106001600160401b038211176101ef57604052565b6101c0565b6001600160401b0381116101ef57604052565b90601f801991011681019081106001600160401b038211176101ef57604052565b90604051915f81549060018260011c93600184169182156102f7575b6020916020871084146102e357868952889560208701949081156102c2575060011461027d575b5050505061027b92500383610207565b565b61028f9194509591955f5260205f2090565b945f935b8285106102ac5750505061027b9350015f80808061026b565b8654858501529586019588955093810193610293565b935050505061027b9491925060ff19168252151560051b015f80808061026b565b634e487b7160e01b5f52602260045260245ffd5b94607f1694610244565b5f5b8381106103125750505f910152565b8181015183820152602001610303565b9060209161033b81518092818552858086019101610301565b601f01601f1916010190565b979399989461038f61010098946103816001600160401b0394999560208d61012091829160018060a01b039e8f16815201528d0190610322565b908b820360408d0152610322565b9a60608a015216608088015260a0870152151560c0860152151560e085015216910152565b3461019a57602036600319011261019a5761ffff6103d0610189565b165f52600160205260405f2060018060a01b0361044181835416926103f760018201610228565b9061040460028201610228565b946003820154916001600160401b0360048201541660066005830154920154936040519889988660101c169660ff808860081c169716958a610347565b0390f35b5f91031261019a57565b634e487b7160e01b5f52602160045260245ffd5b6003111561046d57565b61044f565b3461019a575f36600319011261019a57335f52601160205260ff60405f205416601260205260405f2060206040516104a9816101d4565b60016001600160401b03845416938483520154918291015260405191600384101561046d57606093835260208301526040820152f35b3461019a575f36600319011261019a57335f52600e6020526040805f20546010602052815f205482519182526020820152f35b3461019a575f36600319011261019a576014546040516001600160a01b039091168152602090f35b600435906001600160a01b038216820361019a57565b602435906001600160a01b038216820361019a57565b3461019a57602036600319011261019a5761057f61053a565b6015546001600160a01b0390811633036105c457601454918183166105b2576001600160a01b0319909216911617601455005b6040516311dac86360e11b8152600490fd5b604051635fc483c560e01b8152600490fd5b3461019a575f36600319011261019a57335f908152601160205260409020600190610603905b5460ff1690565b61060c81610463565b1461071657335f908152600e6020526040902054801561070457335f90815260106020526040902061066b91905480156106fe576106499161195b565b61065281611a0d565b5061065b6118d0565b90610665826118ea565b52611d0c565b6106aa610676610f0a565b33815261068b835f52601360205260405f2090565b905181546001600160a01b0319166001600160a01b0391909116179055565b335f9081526011602052604090206106c990805460ff19166001179055565b60405190815233907fbd39a2181298499fd7cac17e7a4ca79c6a2a86be8394fcb12f279c0ab6a6a11d9080602081015b0390a2005b50610649565b604051636165515360e11b8152600490fd5b604051637299cb1960e01b8152600490fd5b3461019a575f36600319011261019a57602061ffff600a5416604051908152f35b3461019a57602036600319011261019a5760048035906001600160401b038083169081840361019a57811561097b5781471061096a57335f908152601260205260409020610796906118a9565b60206107a982516001600160401b031690565b91015180156109225742116109115716811161090157335f908152600e6020526040812090918291829182916107e990546107e383611ed7565b9061195b565b335f908152600e60205260409020908155610805905b54611a0d565b50335f818152600e6020526040902061082091905b54611c21565b6014546001600160a01b0316806108e3575b50335f908152601260205260409020610857905b805467ffffffffffffffff19169055565b335f90815260126020908152604080832060010185905560119091529020610884905b805460ff19169055565b335af161088f61190b565b50156108d457506040516001600160401b03909116815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59080602081016106f9565b6040516327fcd9d160e01b8152fd5b335f908152600e602052604090206108fb919061081a565b5f610832565b5060405163528ef59f60e11b8152fd5b60405163055a0ab760e31b81528490fd5b335f908152601160205260409020859060019061093e906105fc565b61094781610463565b1461095b5760405163e336dced60e01b8152fd5b604051634c3dbb8560e11b8152fd5b6040516314ecd6c760e01b81528390fd5b604051639abc749160e01b81528390fd5b3461019a57604036600319011261019a576109a561053a565b6109ad61019e565b6014546001600160a01b03919082163303610ba6576001600160a01b0383165f908152600f602052604090206109f19082905b9061ffff165f5260205260405f2090565b54908115610b94576001600160a01b0384165f90815260106020526040902061ffff92610a1f915b5461195b565b6001600160a01b0385165f908152601060205260409020908155610a42906107ff565b506001600160a01b0384165f908152601060205260409020610a6590859061081a565b6001600160a01b0384165f908152601060205260409020610a94905b546014546001600160a01b031690611c21565b610a9c611e84565b6001600160a01b0385165f908152600f60205260409020610abe9083906109e0565b55610ae06107ff826109e08760018060a01b03165f52600f60205260405f2090565b50610b038461081a836109e08360018060a01b03165f52600f60205260405f2090565b610b24610a81826109e08760018060a01b03165f52600f60205260405f2090565b6001600160a01b0384165f908152601260205260409020610b4b905b60015f918281550155565b6001600160a01b0384165f908152601160205260409020610b6b9061087a565b1691167fc9ded3d0d6b8883d158b2912c09e57e4eeb6bd6454742de39c432f7be201f3555f80a3005b604051631882a70d60e21b8152600490fd5b604051632b58c3e760e01b8152600490fd5b3461019a575f36600319011261019a57335f908152601260205260409020610bdf906118a9565b6020610bf282516001600160401b031690565b9101518015610c29574211610c17576040516001600160401b03919091168152602090f35b60405163055a0ab760e31b8152600490fd5b335f908152601160205260409020600190610c43906105fc565b610c4c81610463565b14610c635760405163e336dced60e01b8152600490fd5b604051634c3dbb8560e11b8152600490fd5b3461019a57606036600319011261019a57610c8e61053a565b610c9661019e565b6014546001600160a01b03916044359183163303610ba6576001600160a01b0384165f908152600e60205260409020548015610ed0576001600160a01b0385165f90815260106020526040902061ffff9390610d2f905491610d16818415159585875f14610eca57610d079161195b565b610d1081611a0d565b50611a17565b90610d2082611a0d565b50610d29611e84565b91611f2a565b91610d3983611a0d565b506001600160a01b0387165f908152600f60205260409020610d5c9085906109e0565b54838115610ea457610d6d91611a9b565b6001600160a01b0388165f908152600f60205260409020610d8f9086906109e0565b555b15610e865790610da091611a9b565b6001600160a01b0385165f908152601060205260409020555b610dda6107ff826109e08760018060a01b03165f52600f60205260405f2090565b50610dfc610a81826109e08760018060a01b03165f52600f60205260405f2090565b6001600160a01b0384165f908152601060205260409020610e1c906107ff565b506001600160a01b0384165f908152601260205260409020610e3d90610b40565b6001600160a01b0384165f908152601160205260409020610e5d9061087a565b1691167fcd7f44294401a9a817b59c3aac6ebf3ba2d36caabd5ef1d90338682a453f6a7b5f80a3005b506001600160a01b0385165f90815260106020526040902055610db9565b9050610ec4856109e08a60018060a01b03165f52600f60205260405f2090565b55610d91565b50610d07565b60405163c015977760e01b8152600490fd5b3461019a575f36600319011261019a576015546040516001600160a01b039091168152602090f35b60405190602082018281106001600160401b038211176101ef57604052565b6040519061027b826101d4565b6001600160401b0381116101ef57601f01601f191660200190565b81601f8201121561019a57803590610f6882610f36565b92610f766040519485610207565b8284526020838301011161019a57815f926020809301838601378301015290565b606060031982011261019a57600435916001600160401b0360243581811161019a5783610fc691600401610f51565b9260443591821161019a57610fdd91600401610f51565b90565b3461019a57610ffb610ff136610f97565b8183949293611b1f565b815f526006602052602061ffff60405f205416910151905f544201928342116110ae5761107961109f936110ac956001600160401b036040519261103e846101d4565b1682526020820152835f52600560205260405f209060206001916001600160401b038151166001600160401b03198554161784550151910155565b5f52600660205260405f2061ffff19815416905561ffff165f52600760205260405f2090565b805460ff19166002179055565b005b61193a565b3461019a57604036600319011261019a57602060ff6110ff6110d3610189565b61ffff6110de610550565b91165f526002845260405f209060018060a01b03165f5260205260405f2090565b54166040519015158152f35b3461019a575f36600319011261019a57335f52600e602052602060405f2054604051908152f35b3461019a575f36600319011261019a57335f526010602052602060405f2054604051908152f35b3461019a575f36600319011261019a5760206040516102588152f35b3461019a57604036600319011261019a57602060ff6110ff611195610189565b61ffff6111a0610550565b91165f52600d845260405f209060018060a01b03165f5260205260405f2090565b3461019a576111de60206111d436610f97565b8183959293611b1f565b0151815f52601360205260405f209160405192602084018481106001600160401b038211176101ef57604052546001600160a01b03168352426102588101939084106110ae575f6112b36112c1936112a561109f966110ac98611251611242610f29565b6001600160401b039093168352565b6020820152855161127e906001600160a01b03166001600160a01b03165f90815260126020526040902090565b9060206001916001600160401b038151166001600160401b03198554161784550151910155565b5f52601360205260405f2090565b55516001600160a01b031690565b6001600160a01b03165f90815260116020526040902090565b3461019a576110ac61109f6113066113936113d06113be60206112fc36610f97565b8183989293611b1f565b0151845f5260086020525f6113b560408220966113a7604051986113298a6101d4565b546001600160a01b0381168a5260a01c61ffff1660208a019081528454909590611353904261194e565b61135e611242610f29565b602082015261127e611387611375885161ffff1690565b61ffff165f52600460205260405f2090565b8b516001600160a01b03165b60018060a01b03165f5260205260405f2090565b5f52600860205260405f2090565b555161ffff1690565b61ffff165f52600960205260405f2090565b91516001600160a01b031690565b5f36600319011261019a573415611533576001600160401b0380341161152157611409903416611ed7565b335f908152600e6020526040902054801561150c579061142891611a9b565b335f908152600e60205260409020555b335f908152600e6020526040902061144f906107ff565b50335f818152600e60205260409020611468919061081a565b6014546001600160a01b0316806114ee575b335f90815260126020526040902061149190610846565b335f90815260126020526040812060010155335f9081526011602052604090206114ba9061087a565b60405134815233907f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c49080602081016106f9565b335f908152600e60205260409020611506919061081a565b5f61147a565b50335f908152600e6020526040902055611438565b6040516305b9d51760e41b8152600490fd5b60405163fe9ba5cd60e01b8152600490fd5b3461019a575f36600319011261019a5760206040516127118152f35b3461019a57606036600319011261019a5761157a61053a565b611582610550565b61158a6101af565b60145490916001600160a01b039182163303610ba6576001600160a01b0384165f908152600f602052604090206115c29084906109e0565b54908115610b945784610441936115f084610a1961ffff9960018060a01b03165f52600e60205260405f2090565b6001600160a01b0383165f908152600e60205260409020908155611613906107ff565b506001600160a01b0382165f908152600e6020526040902061163690839061081a565b6001600160a01b0382165f908152600e6020526040902061165690610a81565b6001600160a01b0382165f908152601060205260409020611678908590610a19565b6001600160a01b0383165f90815260106020526040902090815561169b906107ff565b506001600160a01b0382165f9081526010602052604090206116be90839061081a565b6001600160a01b0382165f9081526010602052604090206116de90610a81565b6001600160a01b0383165f908152600e602052604090205484811561188b5761170691611a9b565b6001600160a01b0384165f908152600e60205260409020555b6001600160a01b0383165f908152600e6020526040902061173f906107ff565b506001600160a01b0383165f908152600e6020526040902061176290849061081a565b6001600160a01b0383165f908152600e6020526040902061178290610a81565b61178a611e84565b6001600160a01b0383165f908152600f602052604090206117ac9088906109e0565b556117ce6107ff876109e08560018060a01b03165f52600f60205260405f2090565b506117f18261081a886109e08360018060a01b03165f52600f60205260405f2090565b611812610a81876109e08560018060a01b03165f52600f60205260405f2090565b6001600160a01b0382165f90815260126020526040902061183290610b40565b6001600160a01b0382165f9081526011602052604090206118529061087a565b8060405197889716931691167f48863b9440e731ce47d2d0cb2155a76a0f38c0c896a264983b01223f99bbe09f5f80a482526020820190565b6001600160a01b0385165f908152600e60205260409020555061171f565b906040516118b6816101d4565b6020600182946001600160401b0381541684520154910152565b604051906118dd826101d4565b6001825260203681840137565b8051156118f75760200190565b634e487b7160e01b5f52603260045260245ffd5b3d15611935573d9061191c82610f36565b9161192a6040519384610207565b82523d5f602084013e565b606090565b634e487b7160e01b5f52601160045260245ffd5b919082018092116110ae57565b9081156119fd575b80156119eb575b602090606460018060a01b035f8051602061219a8339815191525416935f60405195869485936303056db360e31b8552600485015260248401528160448401525af19081156119e6575f916119bd575090565b610fdd915060203d6020116119df575b6119d78183610207565b810190611c07565b503d6119cd565b611c16565b5060206119f6611e84565b905061196a565b9050611a07611e84565b90611963565b610fdd3082611c21565b908115611a8b575b8015611a79575b602090606460018060a01b035f8051602061219a8339815191525416935f6040519586948593631391547f60e01b8552600485015260248401528160448401525af19081156119e6575f916119bd575090565b506020611a84611e84565b9050611a26565b9050611a95611e84565b90611a1f565b908115611b0f575b8015611afd575b602090606460018060a01b035f8051602061219a8339815191525416935f604051958694859363022f65e760e31b8552600485015260248401528160448401525af19081156119e6575f916119bd575090565b506020611b08611e84565b9050611aaa565b9050611b19611e84565b90611aa3565b9190825f527f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf016020908060205260405f205415611bf557845f5260205260405f206040519182602083549182815201925f5260205f20915f905b828210611bde57505050509181611b99611ba29593611b9e950382610207565b611fe9565b1590565b611bcc577f1af0453083661051f6e56e5c070792320652e612154bf9af8637bb1e7655b99d5f80a2565b60405163cf6c44e960e01b8152600490fd5b835485529384019360019384019390910190611b79565b60405163d66ca67560e01b8152600490fd5b9081602091031261019a575190565b6040513d5f823e3d90fd5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700546001600160a01b0392908316803b1561019a575f92836044926040519687958694635ca4b5b160e11b865260048601521660248401525af180156119e657611c885750565b61027b906101f4565b9081518082526020808093019301915f5b828110611cb0575050505090565b835185529381019392810192600101611ca2565b906020610fdd928181520190611c91565b9291611cee918452606060208501526060840190611c91565b91604063c10046c360e01b910152565b5f1981146110ae5760010190565b7f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf0080547f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700549093929190611d7690611d6a906001600160a01b031681565b6001600160a01b031690565b803b1561019a575f6040518092637d6e912360e11b8252818381611d9d8960048301611cc4565b03925af180156119e657611e71575b507f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970254611de390611d6a906001600160a01b031681565b90813b1561019a575f6040518093633263b83b60e01b8252818381611e0c898c60048401611cd5565b03925af180156119e65761027b93611e3493611e2e92611e58575b50866120c0565b54611cfe565b7f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf0055565b80611e65611e6b926101f4565b80610445565b5f611e27565b80611e65611e7e926101f4565b5f611dac565b5f8051602061219a83398151915254604051639cd07acb60e01b81525f60048201819052600560248301529091602091839160449183916001600160a01b03165af19081156119e6575f916119bd575090565b5f8051602061219a83398151915254604051639cd07acb60e01b8152600481019290925260056024830152602090829060449082905f906001600160a01b03165af19081156119e6575f916119bd575090565b9060646020925f60018060a01b035f8051602061219a83398151915254166040519687958694637702dcff60e01b86526004860152602485015260448401525af19081156119e6575f916119bd575090565b6020929190611f92849282815194859201610301565b019081520190565b9081602091031261019a5751801515810361019a5790565b91611fdb90611fcd610fdd9593606086526060860190611c91565b908482036020860152610322565b916040818403910152610322565b9190805191602093838501938486116110ae576040018094116110ae576120849361202e8694612020604051938492888401611f7c565b03601f198101835282610207565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649703545f9061206690611d6a906001600160a01b031681565b92604051968795869485936378542ead60e01b855260048501611fb2565b03925af19182156119e6575f9261209a57505090565b610fdd9250803d106120b9575b6120b18183610207565b810190611f9a565b503d6120a7565b805f527f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf016020918160205260405f2054612187575f5260205260405f20908251926001600160401b0384116101ef576801000000000000000084116101ef578254848455808510612161575b50602061213e9101925f5260205f2090565b905f5b84811061214f575050505050565b83518382015592810192600101612141565b835f528460205f2091820191015b81811061217c575061212c565b5f815560010161216f565b604051633f06d22b60e01b8152600490fdfe9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649701a2646970667358221220c2ef44cba68c5316f3a78a293654d55d926cce6d5aa32adbb056a5cd70976f7064736f6c63430008180033";

type ShareVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShareVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShareVault__factory extends ContractFactory {
  constructor(...args: ShareVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ShareVault & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ShareVault__factory {
    return super.connect(runner) as ShareVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShareVaultInterface {
    return new Interface(_abi) as ShareVaultInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ShareVault {
    return new Contract(address, _abi, runner) as unknown as ShareVault;
  }
}
