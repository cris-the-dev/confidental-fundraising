/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  CampaignToken,
  CampaignTokenInterface,
} from "../../../contracts/core/CampaignToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint16",
        name: "_campaignId",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "ExceedsMaxSupply",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "campaignId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234620003995762000da0803803806200001d816200039d565b928339810190608081830312620003995780516001600160401b03908181116200039957836200004f918401620003c3565b92602090818401519083821162000399576200006d918501620003c3565b9360408401519361ffff851685036200039957606001516001600160a01b0395868216949185900362000399578251828111620002a4576003918254916001958684811c941680156200038e575b888510146200037a578190601f9485811162000327575b508890858311600114620002c4575f92620002b8575b50505f1982861b1c191690861b1783555b8051938411620002a45760049586548681811c9116801562000299575b8282101462000286578381116200023e575b5080928511600114620001d457509383949184925f95620001c8575b50501b925f19911b1c19161781555b8115620001b15750600580546001600160a01b03198116831790915560405193167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a360805261096c9081620004348239608051816103090152f35b6024905f60405191631e4fbdf760e01b8352820152fd5b015193505f8062000144565b92919084601f198116885f52855f20955f905b8983831062000223575050501062000209575b50505050811b01815562000153565b01519060f8845f19921b161c191690555f808080620001fa565b858701518955909701969485019488935090810190620001e7565b875f52815f208480880160051c8201928489106200027c575b0160051c019087905b8281106200027057505062000128565b5f815501879062000260565b9250819262000257565b602288634e487b7160e01b5f525260245ffd5b90607f169062000116565b634e487b7160e01b5f52604160045260245ffd5b015190505f80620000e8565b90889350601f19831691875f528a5f20925f5b8c828210620003105750508411620002f8575b505050811b018355620000f9565b01515f1983881b60f8161c191690555f8080620002ea565b8385015186558c97909501949384019301620002d7565b909150855f52885f208580850160051c8201928b861062000370575b918a91869594930160051c01915b82811062000361575050620000d2565b5f81558594508a910162000351565b9250819262000343565b634e487b7160e01b5f52602260045260245ffd5b93607f1693620000bb565b5f80fd5b6040519190601f01601f191682016001600160401b03811183821017620002a457604052565b919080601f84011215620003995782516001600160401b038111620002a457602090620003f9601f8201601f191683016200039d565b9281845282828701011162000399575f5b8181106200041f5750825f9394955001015290565b85810183015184820184015282016200040a56fe608060409080825260049081361015610016575f80fd5b5f3560e01c90816306fdde03146106a657508063095ea7b3146105fd57806318160ddd146105df57806323b872dd146104ee578063313ce567146104d357806332cb6b0c146104ad57806340c10f19146103e657806370a08231146103b0578063715018a6146103555780638da5cb5b1461032d5780638ed5b0fc146102ef57806395d89b41146101cf578063a9059cbb1461019f578063dd62ed3e146101565763f2fde38b146100c5575f80fd5b34610152576020366003190112610152576100de6107e3565b906100e761090a565b6001600160a01b0391821692831561013c575050600554826bffffffffffffffffffffffff60a01b821617600555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3005b905f6024925191631e4fbdf760e01b8352820152fd5b5f80fd5b82346101525780600319360112610152576020906101726107e3565b61017a6107f9565b9060018060a01b038091165f5260018452825f2091165f528252805f20549051908152f35b82346101525780600319360112610152576020906101c86101be6107e3565b6024359033610830565b5160018152f35b509034610152575f366003190112610152578051905f835460018160011c90600183169283156102e5575b60209384841081146102d2578388529081156102b65750600114610262575b505050829003601f01601f191682019267ffffffffffffffff84118385101761024f575082918261024b92528261079c565b0390f35b604190634e487b7160e01b5f525260245ffd5b5f878152929350837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8385106102a257505050508301015f8080610219565b80548886018301529301928490820161028c565b60ff1916878501525050151560051b84010190505f8080610219565b602289634e487b7160e01b5f525260245ffd5b91607f16916101fa565b8234610152575f366003190112610152576020905161ffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b8234610152575f3660031901126101525760055490516001600160a01b039091168152602090f35b34610152575f3660031901126101525761036d61090a565b600580546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b8234610152576020366003190112610152576020906001600160a01b036103d56107e3565b165f525f8252805f20549051908152f35b5090346101525780600319360112610152576104006107e3565b906024359161040d61090a565b600254906b033b2e3c9fd0803ce8000000610428858461080f565b1161049d576001600160a01b03169384156104875750827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9261046e5f9560209461080f565b60025585855284835280852082815401905551908152a3005b6024905f84519163ec442f0560e01b8352820152fd5b825163c30436e960e01b81528590fd5b8234610152575f36600319011261015257602090516b033b2e3c9fd0803ce80000008152f35b8234610152575f366003190112610152576020905160128152f35b5034610152576060366003190112610152576105086107e3565b6105106107f9565b906044359260018060a01b038216805f526001602052855f20335f52602052855f2054915f19830361054b575b6020876101c8888888610830565b8583106105b357811561059d57331561058757505f908152600160209081528682203383528152908690209185900390915582906101c861053d565b6024905f885191634a1406b160e11b8352820152fd5b6024905f88519163e602df0560e01b8352820152fd5b8651637dc7a0d960e11b8152339181019182526020820193909352604081018690528291506060010390fd5b8234610152575f366003190112610152576020906002549051908152f35b5090346101525780600319360112610152576106176107e3565b602435903315610690576001600160a01b031690811561067a5760209350335f5260018452825f20825f52845280835f205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8251634a1406b160e11b81525f81860152602490fd5b825163e602df0560e01b81525f81860152602490fd5b90508234610152575f366003190112610152575f60035460018160011c9060018316928315610792575b60209384841081146102d257838852908115610776575060011461072057505050829003601f01601f191682019267ffffffffffffffff84118385101761024f575082918261024b92528261079c565b60035f908152929350837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8385106107625750505050830101848080610219565b80548886018301529301928490820161074c565b60ff1916878501525050151560051b8401019050848080610219565b91607f16916106d0565b602080825282518183018190529093925f5b8281106107cf57505060409293505f838284010152601f8019910116010190565b8181018601518482016040015285016107ae565b600435906001600160a01b038216820361015257565b602435906001600160a01b038216820361015257565b9190820180921161081c57565b634e487b7160e01b5f52601160045260245ffd5b916001600160a01b038084169283156108f257169283156108da57825f525f60205260405f2054908282106108a85750817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f5260405f20818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101829052606490fd5b60405163ec442f0560e01b81525f6004820152602490fd5b604051634b637e8f60e11b81525f6004820152602490fd5b6005546001600160a01b0316330361091e57565b60405163118cdaa760e01b8152336004820152602490fdfea2646970667358221220af8c0758339ea2d337972dabdb42230795d2828896cef50385de2860cfb8a55e64736f6c63430008180033";

type CampaignTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CampaignTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CampaignToken__factory extends ContractFactory {
  constructor(...args: CampaignTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    _campaignId: BigNumberish,
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name,
      symbol,
      _campaignId,
      initialOwner,
      overrides || {}
    );
  }
  override deploy(
    name: string,
    symbol: string,
    _campaignId: BigNumberish,
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      name,
      symbol,
      _campaignId,
      initialOwner,
      overrides || {}
    ) as Promise<
      CampaignToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CampaignToken__factory {
    return super.connect(runner) as CampaignToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CampaignTokenInterface {
    return new Interface(_abi) as CampaignTokenInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CampaignToken {
    return new Contract(address, _abi, runner) as unknown as CampaignToken;
  }
}
