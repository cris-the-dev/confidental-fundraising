/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  DecryptionCallbacks,
  DecryptionCallbacksInterface,
} from "../../../../../contracts/interface/impl/DecryptionCallback.sol/DecryptionCallbacks";

const _abi = [
  {
    inputs: [],
    name: "InvalidKMSSignatures",
    type: "error",
  },
  {
    inputs: [],
    name: "NoHandleFoundForRequestID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestID",
        type: "uint256",
      },
    ],
    name: "DecryptionFulfilled",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "cleartexts",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "decryptionProof",
        type: "bytes",
      },
    ],
    name: "callbackDecryptMyContribution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "cleartexts",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "decryptionProof",
        type: "bytes",
      },
    ],
    name: "callbackDecryptTotalRaised",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "campaignCount",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "campaigns",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "euint64",
        name: "totalRaised",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "targetAmount",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "finalized",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "cancelled",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526102585f55348015610014575f80fd5b506109e6806100225f395ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c80631ed33998146100595780637274e30d1461008957806399d7cf01146100aa578063a327d9b1146100bf578063cb4869ed146100fc575b5f80fd5b61006c610067366004610683565b61010f565b6040516100809897969594939291906106f0565b60405180910390f35b600a546100979061ffff1681565b60405161ffff9091168152602001610080565b6100bd6100b83660046107ff565b610278565b005b6100ec6100cd366004610867565b600260209081525f928352604080842090915290825290205460ff1681565b6040519015158152602001610080565b6100bd61010a3660046107ff565b61033a565b600160208190525f9182526040909120805491810180546001600160a01b039093169261013b906108a7565b80601f0160208091040260200160405190810160405280929190818152602001828054610167906108a7565b80156101b25780601f10610189576101008083540402835291602001916101b2565b820191905f5260205f20905b81548152906001019060200180831161019557829003601f168201915b5050505050908060020180546101c7906108a7565b80601f01602080910402602001604051908101604052809291908181526020018280546101f3906108a7565b801561023e5780601f106102155761010080835404028352916020019161023e565b820191905f5260205f20905b81548152906001019060200180831161022157829003601f168201915b505050506003830154600484015460058501546006909501549394919367ffffffffffffffff909116925060ff8082169161010090041688565b610283838383610447565b5f8381526006602052604081205461ffff16906102a1846008015190565b905060405180604001604052808267ffffffffffffffff1681526020015f54426102cb91906108df565b905261ffff83165f8181526005602090815260408083208551815467ffffffffffffffff191667ffffffffffffffff9091161781559482015160019586015589835260068252808320805461ffff191690559282526007905220805460ff191682805b02179055505050505050565b610345838383610447565b5f610351836008015190565b5f8581526008602090815260408083208151808301835290546001600160a01b0381168252600160a01b900461ffff1681840152815180830190925267ffffffffffffffff8516825292549394509192908201906103af90426108df565b90526020828101805161ffff9081165f90815260048452604080822087516001600160a01b0390811684529086528183208751815467ffffffffffffffff191667ffffffffffffffff909116178155968601516001978801558b83526008865281832080546001600160b01b03191690559351909216815260098452818120865190931681529190925220805460ff1916828061032e565b5f610451846104b0565b90505f61045f828585610581565b90508061047f5760405163cf6c44e960e01b815260040160405180910390fd5b60405185907f1af0453083661051f6e56e5c070792320652e612154bf9af8637bb1e7655b99d905f90a25050505050565b5f8181527f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf0160205260408120546060917f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf009190036105215760405163d66ca67560e01b815260040160405180910390fd5b5f8381526001820160209081526040918290208054835181840281018401909452808452909183018282801561057457602002820191905f5260205f20905b815481526020019060010190808311610560575b5050505050915050919050565b5f808351602061059191906108df565b61059c9060206108df565b90505f84826040516020016105b2929190610904565b60405160208183030381529060405290505f6105eb7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970090565b60038101546040516378542ead60e01b81529192506001600160a01b0316906378542ead90610622908a9086908a90600401610925565b6020604051808303815f875af115801561063e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106629190610991565b979650505050505050565b803561ffff8116811461067e575f80fd5b919050565b5f60208284031215610693575f80fd5b61069c8261066d565b9392505050565b5f5b838110156106bd5781810151838201526020016106a5565b50505f910152565b5f81518084526106dc8160208601602086016106a3565b601f01601f19169290920160200192915050565b6001600160a01b0389168152610100602082018190525f906107148382018b6106c5565b90508281036040840152610728818a6106c5565b6060840198909852505067ffffffffffffffff94909416608085015260a0840192909252151560c0830152151560e0909101529392505050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112610785575f80fd5b813567ffffffffffffffff808211156107a0576107a0610762565b604051601f8301601f19908116603f011681019082821181831017156107c8576107c8610762565b816040528381528660208588010111156107e0575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f805f60608486031215610811575f80fd5b83359250602084013567ffffffffffffffff8082111561082f575f80fd5b61083b87838801610776565b93506040860135915080821115610850575f80fd5b5061085d86828701610776565b9150509250925092565b5f8060408385031215610878575f80fd5b6108818361066d565b915060208301356001600160a01b038116811461089c575f80fd5b809150509250929050565b600181811c908216806108bb57607f821691505b6020821081036108d957634e487b7160e01b5f52602260045260245ffd5b50919050565b808201808211156108fe57634e487b7160e01b5f52601160045260245ffd5b92915050565b5f83516109158184602088016106a3565b9190910191825250602001919050565b606080825284519082018190525f906020906080840190828801845b8281101561095d57815184529284019290840190600101610941565b505050838103602085015261097281876106c5565b915050828103604084015261098781856106c5565b9695505050505050565b5f602082840312156109a1575f80fd5b8151801515811461069c575f80fdfea2646970667358221220f49964919f8740306ce7d4e88429d1eeea69e67ba4da2c940e93cfb5436d54a464736f6c63430008180033";

type DecryptionCallbacksConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DecryptionCallbacksConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DecryptionCallbacks__factory extends ContractFactory {
  constructor(...args: DecryptionCallbacksConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DecryptionCallbacks & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): DecryptionCallbacks__factory {
    return super.connect(runner) as DecryptionCallbacks__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DecryptionCallbacksInterface {
    return new Interface(_abi) as DecryptionCallbacksInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DecryptionCallbacks {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as DecryptionCallbacks;
  }
}
