/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  DecryptionCallbacks,
  DecryptionCallbacksInterface,
} from "../../../../../contracts/interface/impl/DecryptionCallback.sol/DecryptionCallbacks";

const _abi = [
  {
    inputs: [],
    name: "InvalidKMSSignatures",
    type: "error",
  },
  {
    inputs: [],
    name: "NoHandleFoundForRequestID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestID",
        type: "uint256",
      },
    ],
    name: "DecryptionFulfilled",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "cleartexts",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "decryptionProof",
        type: "bytes",
      },
    ],
    name: "callbackDecryptMyContribution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "cleartexts",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "decryptionProof",
        type: "bytes",
      },
    ],
    name: "callbackDecryptTotalRaised",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "campaignCount",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "campaigns",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "euint8",
        name: "totalRaised",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "targetAmount",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "finalized",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "cancelled",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b506109428061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c80631ed33998146100595780637274e30d1461008957806399d7cf01146100aa578063a327d9b1146100bf578063cb4869ed146100fc575b5f80fd5b61006c6100673660046105e6565b61010f565b604051610080989796959493929190610653565b60405180910390f35b6009546100979061ffff1681565b60405161ffff9091168152602001610080565b6100bd6100b836600461075b565b61026f565b005b6100ec6100cd3660046107c3565b600160209081525f928352604080842090915290825290205460ff1681565b6040519015158152602001610080565b6100bd61010a36600461075b565b6102f4565b5f60208190529081526040902080546001820180546001600160a01b03909216929161013a90610803565b80601f016020809104026020016040519081016040528092919081815260200182805461016690610803565b80156101b15780601f10610188576101008083540402835291602001916101b1565b820191905f5260205f20905b81548152906001019060200180831161019457829003601f168201915b5050505050908060020180546101c690610803565b80601f01602080910402602001604051908101604052809291908181526020018280546101f290610803565b801561023d5780601f106102145761010080835404028352916020019161023d565b820191905f5260205f20905b81548152906001019060200180831161022057829003601f168201915b505050506003830154600484015460058501546006909501549394919360ff9182169350818116916101009091041688565b61027a8383836103aa565b5f8381526005602052604081205461ffff1690610298846008015190565b61ffff83165f818152600460209081526040808320805460ff871660ff19918216179091558a845260058352818420805461ffff1916905593835260069091529020805492935060019290911682805b02179055505050505050565b6102ff8383836103aa565b5f61030b836008015190565b5f8581526007602081815260408084208151808301835281546001600160a01b03808216835261ffff600160a01b90920482168387018181529089526003875285892084519092168952908652848820805460ff8b1660ff19918216179091558d895296865283546001600160b01b031916909355915190911685526008835281852033865290925290922080549394509192600192911682806102e8565b5f6103b484610413565b90505f6103c28285856104e4565b9050806103e25760405163cf6c44e960e01b815260040160405180910390fd5b60405185907f1af0453083661051f6e56e5c070792320652e612154bf9af8637bb1e7655b99d905f90a25050505050565b5f8181527f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf0160205260408120546060917f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf009190036104845760405163d66ca67560e01b815260040160405180910390fd5b5f838152600182016020908152604091829020805483518184028101840190945280845290918301828280156104d757602002820191905f5260205f20905b8154815260200190600101908083116104c3575b5050505050915050919050565b5f80835160206104f4919061083b565b6104ff90602061083b565b90505f8482604051602001610515929190610860565b60405160208183030381529060405290505f61054e7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970090565b60038101546040516378542ead60e01b81529192506001600160a01b0316906378542ead90610585908a9086908a90600401610881565b6020604051808303815f875af11580156105a1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105c591906108ed565b979650505050505050565b803561ffff811681146105e1575f80fd5b919050565b5f602082840312156105f6575f80fd5b6105ff826105d0565b9392505050565b5f5b83811015610620578181015183820152602001610608565b50505f910152565b5f815180845261063f816020860160208601610606565b601f01601f19169290920160200192915050565b6001600160a01b0389168152610100602082018190525f906106778382018b610628565b9050828103604084015261068b818a610628565b6060840198909852505060ff94909416608085015260a0840192909252151560c0830152151560e0909101529392505050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126106e1575f80fd5b813567ffffffffffffffff808211156106fc576106fc6106be565b604051601f8301601f19908116603f01168101908282118183101715610724576107246106be565b8160405283815286602085880101111561073c575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f805f6060848603121561076d575f80fd5b83359250602084013567ffffffffffffffff8082111561078b575f80fd5b610797878388016106d2565b935060408601359150808211156107ac575f80fd5b506107b9868287016106d2565b9150509250925092565b5f80604083850312156107d4575f80fd5b6107dd836105d0565b915060208301356001600160a01b03811681146107f8575f80fd5b809150509250929050565b600181811c9082168061081757607f821691505b60208210810361083557634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561085a57634e487b7160e01b5f52601160045260245ffd5b92915050565b5f8351610871818460208801610606565b9190910191825250602001919050565b606080825284519082018190525f906020906080840190828801845b828110156108b95781518452928401929084019060010161089d565b50505083810360208501526108ce8187610628565b91505082810360408401526108e38185610628565b9695505050505050565b5f602082840312156108fd575f80fd5b815180151581146105ff575f80fdfea264697066735822122038f4901ba4eef9831796eca242cad0054c5531802acd91150c1e649008ab810364736f6c63430008180033";

type DecryptionCallbacksConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DecryptionCallbacksConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DecryptionCallbacks__factory extends ContractFactory {
  constructor(...args: DecryptionCallbacksConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DecryptionCallbacks & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): DecryptionCallbacks__factory {
    return super.connect(runner) as DecryptionCallbacks__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DecryptionCallbacksInterface {
    return new Interface(_abi) as DecryptionCallbacksInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DecryptionCallbacks {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as DecryptionCallbacks;
  }
}
