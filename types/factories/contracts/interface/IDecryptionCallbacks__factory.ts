/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IDecryptionCallbacks,
  IDecryptionCallbacksInterface,
} from "../../../contracts/interface/IDecryptionCallbacks";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "cleartexts",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "decryptionProof",
        type: "bytes",
      },
    ],
    name: "callbackDecryptMyContribution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "cleartexts",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "decryptionProof",
        type: "bytes",
      },
    ],
    name: "callbackDecryptTotalRaised",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IDecryptionCallbacks__factory {
  static readonly abi = _abi;
  static createInterface(): IDecryptionCallbacksInterface {
    return new Interface(_abi) as IDecryptionCallbacksInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IDecryptionCallbacks {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IDecryptionCallbacks;
  }
}
